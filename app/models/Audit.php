<?php

/**
 * Audit
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2016-06-29, 15:27:27
 */
class Audit extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var string
     */
    protected $username;

    /**
     *
     * @var string
     */
    protected $service;

    /**
     *
     * @var string
     */
    protected $action_name;

    /**
     *
     * @var string
     */
    protected $start_time;

    /**
     *
     * @var string
     */
    protected $end_time;

    /**
     *
     * @var string
     */
    protected $ip_address;

    /**
     *
     * @var string
     */
    protected $client;

    /**
     *
     * @var string
     */
    protected $browser;

    /**
     *
     * @var string
     */
    protected $parameters;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field username
     *
     * @param string $username
     * @return $this
     */
    public function setUsername($username)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Method to set the value of field service
     *
     * @param string $service
     * @return $this
     */
    public function setService($service)
    {
        $this->service = $service;

        return $this;
    }

    /**
     * Method to set the value of field action_name
     *
     * @param string $action_name
     * @return $this
     */
    public function setActionName($action_name)
    {
        $this->action_name = $action_name;

        return $this;
    }

    /**
     * Method to set the value of field start_time
     *
     * @param string $start_time
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->start_time = $start_time;

        return $this;
    }

    /**
     * Method to set the value of field end_time
     *
     * @param string $end_time
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->end_time = $end_time;

        return $this;
    }

    /**
     * Method to set the value of field ip_address
     *
     * @param string $ip_address
     * @return $this
     */
    public function setIpAddress($ip_address)
    {
        $this->ip_address = $ip_address;

        return $this;
    }

    /**
     * Method to set the value of field client
     *
     * @param string $client
     * @return $this
     */
    public function setClient($client)
    {
        $this->client = $client;

        return $this;
    }

    /**
     * Method to set the value of field browser
     *
     * @param string $browser
     * @return $this
     */
    public function setBrowser($browser)
    {
        $this->browser = $browser;

        return $this;
    }

    /**
     * Method to set the value of the field parameters
     *
     * @param string $parameters
     * @return $this
     */
    public function setParameters($parameters){
        $this->parameters = $parameters;
        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field username
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Returns the value of field service
     *
     * @return string
     */
    public function getService()
    {
        return $this->service;
    }

    /**
     * Returns the value of field action_name
     *
     * @return string
     */
    public function getActionName()
    {
        return $this->action_name;
    }

    /**
     * Returns the value of field start_time
     *
     * @return string
     */
    public function getStartTime()
    {
        return $this->start_time;
    }

    /**
     * Returns the value of field end_time
     *
     * @return string
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    /**
     * Returns the value of field ip_address
     *
     * @return string
     */
    public function getIpAddress()
    {
        return $this->ip_address;
    }

    /**
     * Returns the value of field client
     *
     * @return string
     */
    public function getClient()
    {
        return $this->client;
    }

    /**
     * Returns the value of field browser
     *
     * @return string
     */
    public function getBrowser()
    {
        return $this->browser;
    }

    /**
     * Returns the value of the field parameters
     */
    public function getParameters(){
        return $this->parameters;
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'audit';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Audit[]
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Audit
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }


    public function getData()
    {
        return array(
            'id' => $this->getId(),
            'username' => $this->getUsername(),
            'service' => $this->getService(),
            'action_name' => $this->getActionName(),
            'start_time' => $this->getStartTime(),
            'end_time' => $this->getEndTime(),
            'ip_address' => $this->getIpAddress(),
            'client' => $this->getClient(),
            'browser' => $this->getBrowser(),
            'parameters' => $this->getParameters()
        );
    }

    public function initData($data)
    {
        $this->setUsername($data['username']);
        $this->setService($data['service']);
        $this->setActionName($data['action_name']);
        $this->setStartTime($data['start_time']);
        $this->setEndTime($data['end_time']);
        $this->setIpAddress($data['ip_address']);
        $this->setClient($data['client']);
        $this->setBrowser($data['browser']);
        $this->setParameters($data['parameters']);
    }


    /**
     * @author Ademu Anthony <mail@ademuanthony.com>
     * @param $offset
     * @param $count
     * @param $filter_by
     * @param bool|false $paginate
     * @return array
     */
    public static function fetchAll($offset, $count, $filter_by, $paginate = false)
    {
        $obj = new Audit();
        $builder = $obj->getModelsManager()->createBuilder()
            ->from('Audit')
            ->orderBy('id DESC');

        if ($paginate) {
            $builder = $builder->limit($count, $offset);
        }

        $where = [];
        $bind = [];
        $columns = ['Audit.*'];


        if (isset($filter_by['username'])) {
            $where[] = 'Audit.username = :username:';
            $bind['username'] = $filter_by['username'];
        }
        if (isset($filter_by['service'])) {
            $where[] = 'Audit.service = :service:';
            $bind['service'] = $filter_by['service'];
        }
        if (isset($filter_by['ip_address'])) {
            $where[] = 'Audit.ip_address = :ip_address:';
            $bind['ip_address'] = $filter_by['ip_address'];
        }
        if (isset($filter_by['start_time'])) {
            $where[] = 'Audit.start_time > :start_time:';
            $bind['start_time'] = $filter_by['start_time'];
        }
        if (isset($filter_by['end_time'])) {
            $where[] = 'Audit.end_time < :end_time:';
            $bind['end_time'] = $filter_by['end_time'];
        }
        /*
          if (isset($filter_by['start_time'])) {
             $where[] = 'Audit.start_time = :start_time:';
             $bind['start_time'] = $filter_by['start_time'];
         }
         if (isset($filter_by['end_time'])) {
             $where[] = 'Audit.end_time = :end_time:';
             $bind['end_time'] = $filter_by['end_time'];
         }
         */


        $builder->columns($columns);
        $builder->where(join(' AND ', $where));
        $data = $builder->getQuery()->execute($bind);

        $result = [];
        foreach ($data as $item) {
            $audit = [];
            if (!isset($item->audit)) {
                $audit = $item->getData();
            } else {
                $audit = $item->audit->getData();
            }
            $result[] = $audit;
        }

        return $result;
    }

}
