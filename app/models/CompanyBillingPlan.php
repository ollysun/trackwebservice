<?php

/**
 * CompanyBillingPlan
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2016-11-02, 01:42:44
 */
class CompanyBillingPlan extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var integer
     */
    protected $company_id;

    /**
     *
     * @var integer
     */
    protected $billing_plan_id;

    /**
     * @var integer
     */
    protected $is_default;

    /**
     * @var integer
     */
    protected $status;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field company_id
     *
     * @param integer $company_id
     * @return $this
     */
    public function setCompanyId($company_id)
    {
        $this->company_id = $company_id;

        return $this;
    }

    /**
     * Method to set the value of field billing_plan_id
     *
     * @param integer $billing_plan_id
     * @return $this
     */
    public function setBillingPlanId($billing_plan_id)
    {
        $this->billing_plan_id = $billing_plan_id;

        return $this;
    }

    /**
     * Method for setting the is_default field
     * @param $is_default
     * @return $this
     */
    public function setIsDefault($is_default)
    {
        $this->is_default = $is_default;

        return $this;
    }

    /**
     * Method to set the value of field status
     *
     * @param $status
     * @return $this
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field company_id
     *
     * @return integer
     */
    public function getCompanyId()
    {
        return $this->company_id;
    }

    /**
     * Returns the value of field billing_plan_id
     *
     * @return integer
     */
    public function getBillingPlanId()
    {
        return $this->billing_plan_id;
    }

    /**
     * Method for getting the is default field
     *
     * @return int
     */
    public function getIsDefault()
    {
        return $this->is_default;
    }

    /**
     * Method to get the value of the field status
     *
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->belongsTo('billing_plan_id', 'BillingPlan', 'id', array('alias' => 'BillingPlan'));
        $this->belongsTo('company_id', 'Company', 'id', array('alias' => 'Company'));
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'company_billing_plan';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return CompanyBillingPlan[]
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return CompanyBillingPlan
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return array(
            'id' => 'id',
            'company_id' => 'company_id',
            'billing_plan_id' => 'billing_plan_id',
            'is_default' => 'is_default',
            'status' => 'status'
        );
    }

    /**
     * @param $data
     */
    public function init($data){
        $this->setBillingPlanId($data['billing_plan_id']);
        $this->setCompanyId($data['company_id']);
        $this->setStatus($data['status']);
        $this->setIsDefault($data['is_default']);
    }

    /**
     * @return array
     */
    public function getData(){
        return array(
            'id' => $this->getId(),
            'billing_plan_id' => $this->getBillingPlanId(),
            'company_id' => $this->getCompanyId(),
            'is_default' => $this->getIsDefault(),
            'status' => $this->getStatus()
        );
    }

    public static function fetchAllWithCompanies($filter_by = array()){
        $data_source = new \Phalcon\Mvc\Model\Query\Builder();
        $data_source->addFrom('CompanyBillingPlan', 'CompanyBillingPlan');
        $data_source->leftJoin('BillingPlan', 'BillingPlan.id = CompanyBillingPlan.billing_plan_id', 'BillingPlan');
        $data_source->columns(['CompanyBillingPlan.company_id', 'CompanyBillingPlan.is_default', 'BillingPlan.id, BillingPlan.name, BillingPlan.discount']);
        $data_source->orderBy(['CompanyBillingPlan.company_id','CompanyBillingPlan.is_default DESC']);

        if(isset($filter_by['company_id'])){
            $data_source->where("CompanyBillingPlan.company_id = '".$filter_by['company_id']."'");
        }

        $data = $data_source->getQuery()->execute();

        $plans = [];
        foreach ($data as $item) {
            $plans[] = $item->toArray();
        }
        return $plans;
    }

    public static function fetchPlansForCompany(array $filter_by){
        $data_source = new \Phalcon\Mvc\Model\Query\Builder();
        $data_source->addFrom('CompanyBillingPlan', 'CompanyBillingPlan');
        $data_source->leftJoin('BillingPlan', 'BillingPlan.id = CompanyBillingPlan.billing_plan_id', 'BillingPlan');
        $data_source->columns(['BillingPlan.*']);
        $data_source->orderBy(['CompanyBillingPlan.is_default DESC']);

        if(isset($filter_by['company_id'])){
            $data_source->where("CompanyBillingPlan.company_id = '".$filter_by['company_id']."'");
        }

        $data = $data_source->getQuery()->execute();

        $plans = [];
        foreach ($data as $item) {
            $plans[] = $item->toArray();
        }
        return $plans;
    }

    public static function getLinkedCompanies($plan_id){
        $dataSource = new \Phalcon\Mvc\Model\Query\Builder();
        $dataSource->addFrom('CompanyBillingPlan', 'CompanyBillingPlan');
        $dataSource->leftJoin('Company', 'Company.id = CompanyBillingPlan.company_id', 'Company');
        $dataSource->columns(['Company.id','Company.name']);
        $dataSource->where("CompanyBillingPlan.billing_plan_id = '$plan_id'");
        //$sql = $dataSource->getPhql();

        $data = $dataSource->getQuery()->execute();

        //dd($data);
        $companies = [];
        foreach ($data as $item) {
            //dd($item);
            $companies[] = $item->toArray();
        }

        return $companies;
    }

}
