<?php

/**
 * ResourcePermission
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2017-02-14, 10:48:33
 */
class ResourcePermission extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var integer
     */
    protected $resource_operation_id;

    /**
     *
     * @var integer
     */
    protected $role_id;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field resource_operation_id
     *
     * @param integer $resource_operation_id
     * @return $this
     */
    public function setResourceOperationId($resource_operation_id)
    {
        $this->resource_operation_id = $resource_operation_id;

        return $this;
    }

    /**
     * Method to set the value of field role_id
     *
     * @param integer $role_id
     * @return $this
     */
    public function setRoleId($role_id)
    {
        $this->role_id = $role_id;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field resource_operation_id
     *
     * @return integer
     */
    public function getResourceOperationId()
    {
        return $this->resource_operation_id;
    }

    /**
     * Returns the value of field role_id
     *
     * @return integer
     */
    public function getRoleId()
    {
        return $this->role_id;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->belongsTo('resource_operation_id', 'ResourceOperation', 'id', array('alias' => 'ResourceOperation'));
        $this->belongsTo('role_id', 'Role', 'id', array('alias' => 'Role'));
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'resource_permission';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return ResourcePermission[]
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return ResourcePermission
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return array(
            'id' => 'id',
            'resource_operation_id' => 'resource_operation_id',
            'role_id' => 'role_id'
        );
    }

    public static function fetchByRoleId($role_id){
        $builder = (new ResourcePermission())->getModelsManager()->createBuilder();
        $builder->addFrom('ResourcePermission')
            ->columns('resource_operation_id')
            ->where('ResourcePermission.role_id = :role_id:');

        $result = $builder->getQuery()->execute(['role_id' => $role_id]);
        return $result;
    }

    public static function getOperationsForUser($user_id){
        $builder = (new ResourcePermission())->getModelsManager()->createBuilder();
        $builder->addFrom('ResourcePermission')
            ->innerJoin('UserRole', 'UserRole.role_id = ResourceOperation.role_id')
            ->columns('resource_operation_id')
            ->where('UserRole.user_id = :user_id:');

        $result = $builder->getQuery()->execute(['user_id' => $user_id]);
        return $result;
    }

}
