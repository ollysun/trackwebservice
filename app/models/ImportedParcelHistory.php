<?php

/**
 * Created by PhpStorm.
 * User: ELACHI
 * Date: 10/14/2016
 * Time: 7:59 AM
 */
class ImportedParcelHistory extends \Phalcon\Mvc\Model
{
    public function save($data = null, $whiteList = null)
    {

        parent::save($data, $whiteList); // TODO: Change the autogenerated stub
    }

    public function getData()
    {
        return array(
            'id' => $this->getId(),
            'date' => $this->getDate(),
            'imported_parcel_id' => $this->getImportedParcelId(),
            'status' => $this->getStatus(),
            'text' => $this->getText()
        );
    }

    public static function addFromEmail($email){
        $message = $email['body'];
        if(strpos($message, '~~') === false || strpos($message, '%%M%%ENDOFTX') === false) return;
        $message_parts = explode('~~', $message);
        if(count($message_parts) !== 2) return;



        $message = $message_parts[1];
        $message = substr($message, 0, strlen($message) - 24);

        $date = $email['header']->date;
        $description = $message;
        $subject = $email['header']->subject;

        $subject_parts = explode(' ', $subject);
        if(count($subject_parts) < 4) return;
        $tracking_number = $subject_parts[3];

        $imported_parcel = ImportedParcel::findFirstByTrackingNumber($tracking_number);

        if(!$imported_parcel){
            $imported_parcel = new ImportedParcel();
            $imported_parcel->setTrackingNumber($tracking_number);
            $imported_parcel->setLocalWaybillNumber('NIL');
        }
        $imported_parcel->setLastStatus($description);
        $imported_parcel->setLastStatusDate($date);
        $imported_parcel->save();

        $imported_parcel_history = new ImportedParcelHistory();
        $imported_parcel_history->setText($description);
        $imported_parcel_history->setDate($date);
        $imported_parcel_history->setStatus($description);
        $imported_parcel_history->setImportedParcelId($imported_parcel->getId());
        $imported_parcel_history->save();
    }

    public function initData($data)
    {
        $this->setDate($data['date']);
        $this->setImportedParcelId($data['imported_parcel_id']);
        $this->setStatus($data['status']);
        $this->setText($data['text']);
    }


    /**
     * @author Ademu Anthony <mail@ademuanthony.com>
     * @param $offset
     * @param $count
     * @param $filter_by
     * @param bool|false $paginate
     * @return array
     */
    public static function fetchAll($offset, $count, $filter_by, $paginate = false)
    {
        $obj = new Audit();
        $builder = $obj->getModelsManager()->createBuilder()
            ->from('ImportedParcelHistory')
            ->orderBy('date DESC');

        if ($paginate) {
            $builder = $builder->limit($count, $offset);
        }

        $where = [];
        $bind = [];
        $columns = ['ImportedParcelHistory.*'];


        if (!empty($filter_by['imported_parcel_id'])) {
            $where[] = 'ImportedParcelHistory.imported_parcel_id = :imported_parcel_id:';
            $bind['imported_parcel_id'] = $filter_by['imported_parcel_id'];
        }


        $builder->columns($columns);
        $builder->where(join(' AND ', $where));
        $data = $builder->getQuery()->execute($bind);

        $result = [];
        foreach ($data as $item) {
            /** @var ImportedParcelHistory $item */
            if (!isset($item->audit)) {
                $audit = $item->getData();
            } else {
                $audit = $item->audit->getData();
            }
            $result[] = $audit;
        }

        return $result;
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
   public function getSource()
   {
       return 'imported_parcel_histories';
   }

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var integer
     */
    protected $imported_parcel_id;

    /**
     *
     * @var datetime
     */
    protected $date;

    /**
     *
     * @var string
     */
    protected $status;

    /**
     *
     * @var string
     */
    protected $text;


    public function setStatus($status)
    {
        $this->status = $status;
        return $this;
    }

    public function setDate($date)
    {
        $this->date = $date;
        return $this;
    }

    public function setText($text)
    {
        $this->text = $text;
        return $this;
    }

    public function setImportedParcelId($imported_parcel_id)
    {
        $this->imported_parcel_id = $imported_parcel_id;
        return $this;
    }

    public function getStatus()
    {
        return $this->status;
    }

    public function getText()
    {
        return $this->text;
    }

    public function getDate()
    {
        return $this->date;
    }

    public function getImportedParcelId()
    {
        return $this->imported_parcel_id;
    }

    public function getId()
    {
        return $this->id;
    }
}